Index: src/test/java/org/example/step_def/RegistrationSteps.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.step_def;\r\n\r\nimport cucumber.api.DataTable;\r\nimport cucumber.api.PendingException;\r\nimport cucumber.api.java.en.And;\r\nimport cucumber.api.java.en.Given;\r\nimport cucumber.api.java.en.Then;\r\nimport cucumber.api.java.en.When;\r\nimport org.example.driver.DriverManager;\r\nimport org.example.pages.RegistrationPage;\r\n\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport static org.hamcrest.MatcherAssert.assertThat;\r\nimport static org.hamcrest.Matchers.*;\r\n\r\npublic class RegistrationSteps extends DriverManager {\r\n\r\n    RegistrationPage registrationPage = new RegistrationPage();\r\n\r\n    @When(\"^I enter following data for registration$\")\r\n    public void iEnterFollowingDataForRegistration(DataTable dataTable) {\r\n        List<Map<String, String>> data = dataTable.asMaps(String.class,String.class);\r\n        System.out.println(data);\r\n        System.out.println(dataTable);\r\n        registrationPage.enterRegistrationDetails(\r\n                data.get(0).get(\"firstName\"),\r\n                data.get(0).get(\"lastName\"),\r\n                data.get(0).get(\"email\"),\r\n                data.get(0).get(\"password\"),\r\n                data.get(0).get(\"confirmPassword\")\r\n        );\r\n    }\r\n\r\n\r\n//    @When(\"^I enter first name \\\"([^\\\"]*)\\\"$\")\r\n//    public void i_enter_first_name(String firstName) throws Throwable {\r\n//        registrationPage.enterFirstName(firstName);\r\n//\r\n//    }\r\n//\r\n//    @And(\"^I enter lastname \\\"([^\\\"]*)\\\"$\")\r\n//    public void i_enter_lastname(String lastName) throws Throwable {\r\n//        registrationPage.enterLastName(lastName);\r\n//    }\r\n//\r\n//    @And(\"^I enter valid email on register page \\\"([^\\\"]*)\\\"$\")\r\n//    public void i_enter_valid_email_on_register_page(String emailOnRGPage) throws Throwable {\r\n//        registrationPage.enterEmailOnRGPage(emailOnRGPage);\r\n//\r\n//    }\r\n//\r\n//    @And(\"^I enter valid password on register page \\\"([^\\\"]*)\\\"$\")\r\n//    public void i_enter_valid_password_on_register_page(String passwordOnRGPage) throws Throwable {\r\n//        registrationPage.enterPasswordOnRGPage(passwordOnRGPage);\r\n//\r\n//    }\r\n//\r\n//    @And(\"^I enter confirm password on register page \\\"([^\\\"]*)\\\"$\")\r\n//    public void i_enter_confirm_password_on_register_page(String confirmPassword) throws Throwable {\r\n//        registrationPage.enterConfirmPassword(confirmPassword);\r\n//\r\n//    }\r\n\r\n    @And(\"^I click on REGISTER button on register page$\")\r\n    public void i_click_on_REGISTER_button_on_register_page() throws Throwable {\r\n        registrationPage.clickOnRegisterButtonOnRegistrationPage();\r\n\r\n    }\r\n\r\n\r\n    @Then(\"^I should see text Your registration completed$\")\r\n    public void iShouldSeeTextYourRegistrationCompleted() throws Throwable {\r\n        boolean actualTextAfterRegistrationCompleted = registrationPage.iShouldSeeResultAfterRegistrationCompleted();\r\n        assertThat(actualTextAfterRegistrationCompleted,is(true));\r\n    }\r\n\r\n    @And(\"^I should see \\\"([^\\\"]*)\\\" in URL$\")\r\n    public void iShouldSeeInURL(String expectedTextInURLAfterRegCompleted) throws Throwable {\r\n       String actualTextInURLAfterRegistration = getURL();\r\n       assertThat(actualTextInURLAfterRegistration,containsString(expectedTextInURLAfterRegCompleted));\r\n\r\n    }\r\n\r\n    @And(\"^I should see My account button displayed$\")\r\n    public void iShouldSeeMyAccountButtonDisplayed() {\r\n        boolean myAccountButtonIsDisplayed = registrationPage.iShouldSeeMyAccountButtonDisplayed();\r\n        assertThat(myAccountButtonIsDisplayed,is(true));\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/step_def/RegistrationSteps.java b/src/test/java/org/example/step_def/RegistrationSteps.java
--- a/src/test/java/org/example/step_def/RegistrationSteps.java	
+++ b/src/test/java/org/example/step_def/RegistrationSteps.java	
@@ -90,4 +90,13 @@
     }
 
 
+    @And("^I select gender \"([^\"]*)\"$")
+    public void iSelectGender() throws Throwable {
+        registrationPage.clickOnGenderOnRegistrationPage();
+    }
+
+    @And("^I click on the \"([^\"]*)\"$")
+    public void iClickOnThe() throws Throwable {
+        registrationPage.clickOnBooksCategory();
+    }
 }
Index: src/test/java/org/example/step_def/CheckOutSteps.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/step_def/CheckOutSteps.java b/src/test/java/org/example/step_def/CheckOutSteps.java
new file mode 100644
--- /dev/null	
+++ b/src/test/java/org/example/step_def/CheckOutSteps.java	
@@ -0,0 +1,17 @@
+package org.example.step_def;
+
+import org.example.driver.DriverManager;
+import org.example.pages.CheckOutPage;
+
+public class CheckOutSteps extends DriverManager {
+
+    DriverManager driverManager = new DriverManager();
+    CheckOutPage checkOutPage = new CheckOutPage();
+
+
+
+
+
+
+
+}
Index: src/test/java/org/example/step_def/BooksPLSteps.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/step_def/BooksPLSteps.java b/src/test/java/org/example/step_def/BooksPLSteps.java
new file mode 100644
--- /dev/null	
+++ b/src/test/java/org/example/step_def/BooksPLSteps.java	
@@ -0,0 +1,20 @@
+package org.example.step_def;
+
+import cucumber.api.java.en.And;
+import cucumber.api.java.en.Given;
+import org.example.driver.DriverManager;
+import org.example.pages.BooksPLPage;
+
+public class BooksPLSteps extends DriverManager {
+
+    BooksPLPage booksPLPage = new BooksPLPage();
+    @Given("^I click on the add to cart button for Fahrenheit by Ray Bradbury$")
+    public void i_click_on_the_add_to_cart_button_for_Fahrenheit_by_Ray_Bradbury() throws Throwable {
+        booksPLPage.clickOnAddToCartButtonFahrenheit();
+    }
+
+    @And("^I click on shopping cart$")
+    public void iClickOnShoppingCart() {
+        booksPLPage.clickOnShoppingCartLink();
+    }
+}
Index: src/test/java/org/example/pages/CheckOutPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/pages/CheckOutPage.java b/src/test/java/org/example/pages/CheckOutPage.java
new file mode 100644
--- /dev/null	
+++ b/src/test/java/org/example/pages/CheckOutPage.java	
@@ -0,0 +1,9 @@
+package org.example.pages;
+
+import org.example.driver.DriverManager;
+import org.openqa.selenium.support.FindBy;
+
+public class CheckOutPage extends DriverManager {
+
+
+}
Index: src/test/java/org/example/pages/RegistrationPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.pages;\r\n\r\nimport org.example.driver.DriverManager;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.support.FindBy;\r\n\r\npublic class RegistrationPage extends DriverManager {\r\n    @FindBy(xpath = \"//input[@data-val-required='First name is required.']\")\r\n    WebElement firstNameInputBox;\r\n\r\n    @FindBy(id = \"LastName\")\r\n    WebElement lastNameInputBox;\r\n\r\n    @FindBy(xpath = \"//input[@data-val-required='Email is required.']\")\r\n    WebElement emailInputBoxOnRegistrationPage;\r\n\r\n    @FindBy(xpath = \"//input[@data-val-required='Password is required.']\")\r\n    WebElement passwordInputBoxOnRegistrationPage;\r\n\r\n    @FindBy(id = \"ConfirmPassword\")\r\n    WebElement confirmPasswordInputBox;\r\n\r\n    @FindBy(id = \"register-button\")\r\n    WebElement registerButtonOnRegistrationPage;\r\n\r\n    @FindBy(xpath = \"//div[@class='result']\")\r\n    WebElement resultAfterRegistration;\r\n\r\n    @FindBy(xpath = \"//a[@class='ico-logout']\")\r\n    WebElement logoutButtonOnRGPage;\r\n\r\n    @FindBy(xpath = \"//a[@class='ico-account']\")\r\n    WebElement myAccountButtonDisplayed;\r\n\r\n\r\n    public void enterRegistrationDetails(String firstName,String lastName, String emailOnRGPage, String passwordOnRGPage, String confirmPassword) {\r\n\r\n        firstNameInputBox.clear();\r\n        firstNameInputBox.sendKeys(firstName);\r\n        lastNameInputBox.clear();\r\n        lastNameInputBox.sendKeys(lastName);\r\n        emailInputBoxOnRegistrationPage.clear();\r\n        int myRandomNumber = generateRandomNumber();\r\n        emailInputBoxOnRegistrationPage.sendKeys(myRandomNumber+emailOnRGPage);\r\n        passwordInputBoxOnRegistrationPage.clear();\r\n        passwordInputBoxOnRegistrationPage.sendKeys(passwordOnRGPage);\r\n        confirmPasswordInputBox.clear();\r\n        confirmPasswordInputBox.sendKeys(confirmPassword);\r\n    }\r\n\r\n//    public void enterLastName(String lastName) {\r\n//\r\n//        lastNameInputBox.sendKeys(lastName);\r\n//    }\r\n//\r\n//    public void enterEmailOnRGPage(String emailOnRGPage) {\r\n//\r\n//        emailInputBoxOnRegistrationPage.sendKeys(emailOnRGPage);\r\n//    }\r\n//\r\n//    public void enterPasswordOnRGPage(String passwordOnRGPage) {\r\n//        passwordInputBoxOnRegistrationPage.sendKeys(passwordOnRGPage);\r\n//    }\r\n//\r\n//    public void enterConfirmPassword(String confirmPassword) {\r\n//\r\n//        confirmPasswordInputBox.sendKeys(confirmPassword);\r\n//    }\r\n\r\n    public void clickOnRegisterButtonOnRegistrationPage() {\r\n\r\n        registerButtonOnRegistrationPage.click();\r\n    }\r\n\r\n\r\n    public boolean iShouldSeeResultAfterRegistrationCompleted() {\r\n        return resultAfterRegistration.isDisplayed();\r\n\r\n    }\r\n\r\n    public boolean iShouldSeeMyAccountButtonDisplayed() {\r\n\r\n        return myAccountButtonDisplayed.isDisplayed();\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/pages/RegistrationPage.java b/src/test/java/org/example/pages/RegistrationPage.java
--- a/src/test/java/org/example/pages/RegistrationPage.java	
+++ b/src/test/java/org/example/pages/RegistrationPage.java	
@@ -5,6 +5,10 @@
 import org.openqa.selenium.support.FindBy;
 
 public class RegistrationPage extends DriverManager {
+
+    @FindBy(id = "gender-female")
+    WebElement genderFemale;
+
     @FindBy(xpath = "//input[@data-val-required='First name is required.']")
     WebElement firstNameInputBox;
 
@@ -32,6 +36,9 @@
     @FindBy(xpath = "//a[@class='ico-account']")
     WebElement myAccountButtonDisplayed;
 
+    @FindBy(xpath = "//a[@href='/books']")
+    WebElement booksCategory;
+
 
     public void enterRegistrationDetails(String firstName,String lastName, String emailOnRGPage, String passwordOnRGPage, String confirmPassword) {
 
@@ -83,5 +90,14 @@
         return myAccountButtonDisplayed.isDisplayed();
     }
 
+    public void clickOnGenderOnRegistrationPage() {
+
+        genderFemale.click();
+    }
+
+    public void clickOnBooksCategory() {
+        booksCategory.click();
+    }
+
 
 }
\ No newline at end of file
Index: src/test/java/org/example/step_def/ContactUsSteps.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.step_def;\r\n\r\nimport cucumber.api.java.en.And;\r\nimport cucumber.api.java.en.Then;\r\nimport org.example.driver.DriverManager;\r\nimport org.example.pages.ContactUsPage;\r\n\r\nimport static org.hamcrest.MatcherAssert.assertThat;\r\nimport static org.hamcrest.Matchers.*;\r\n\r\npublic class ContactUsSteps extends DriverManager {\r\n\r\n    ContactUsPage contactUsPage = new ContactUsPage();\r\n    DriverManager driverManager = new DriverManager();\r\n\r\n    @Then(\"^I should see \\\"([^\\\"]*)\\\" text on the contact us page$\")\r\n    public void i_should_see_text_on_the_contact_us_page(String expectedTextOnContactUsPage) throws Throwable {\r\n\r\n        String actualTextOnContactusPage = contactUsPage.getTextFromContactUsPage();\r\n        System.out.println(actualTextOnContactusPage);\r\n        System.out.println(expectedTextOnContactUsPage);\r\n        assertThat(actualTextOnContactusPage, is(equalToIgnoringCase(expectedTextOnContactUsPage)));\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/step_def/ContactUsSteps.java b/src/test/java/org/example/step_def/ContactUsSteps.java
--- a/src/test/java/org/example/step_def/ContactUsSteps.java	
+++ b/src/test/java/org/example/step_def/ContactUsSteps.java	
@@ -11,7 +11,6 @@
 public class ContactUsSteps extends DriverManager {
 
     ContactUsPage contactUsPage = new ContactUsPage();
-    DriverManager driverManager = new DriverManager();
 
     @Then("^I should see \"([^\"]*)\" text on the contact us page$")
     public void i_should_see_text_on_the_contact_us_page(String expectedTextOnContactUsPage) throws Throwable {
Index: src/test/resources/endToEnd.feature
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/endToEnd.feature b/src/test/resources/endToEnd.feature
new file mode 100644
--- /dev/null	
+++ b/src/test/resources/endToEnd.feature	
@@ -0,0 +1,34 @@
+@endToEnd
+
+Feature: End to end Functionality
+
+  Scenario: Buy one product
+    Given I am on the home page
+    And I click on register button
+    And I select gender "Female"
+    And I enter following data for registration
+      | first name | last name | email          | password | confirm password |
+      | Mittal     | Thummar   | test@gmail.com | test@123 | test@123         |
+    And I click on REGISTER button on register page
+    And I click on the "Books"
+    And I click on the add to cart button for Fahrenheit by Ray Bradbury
+    And I click on shopping cart
+    And I click to accept term and condition
+    And I click on checkout button
+    And I enter following details on checkout page
+      | country        | city    | addressLine1     | postcode | phoneNumber |
+      | United Kingdom | Swindon | 10 Coronel Close | SN3 4FW  | 07549079954 |
+    And I click on continue button
+    Then I should see Checkout Text
+    And I click on continue button on shipping method
+    And I select credit card
+    And I click on continue button on payment method
+    And I enter following details on the payment page
+      | cardName  | cardNumber       | cardCode |
+      | M THUMMAR | 4444333322221111 | 111      |
+    And I click on continue button on payment information
+    When I click on confirm button
+    Then I should see "Thank you" text on confirmation page
+    And I should see "Your order has been successfully processed!" text on confirmation page
+    And the url should contain with "checkout/completed"
+
Index: src/test/java/org/example/pages/BooksPLPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/pages/BooksPLPage.java b/src/test/java/org/example/pages/BooksPLPage.java
new file mode 100644
--- /dev/null	
+++ b/src/test/java/org/example/pages/BooksPLPage.java	
@@ -0,0 +1,24 @@
+package org.example.pages;
+
+import org.example.driver.DriverManager;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.support.FindBy;
+
+public class BooksPLPage extends DriverManager {
+
+    @FindBy(className = "button-2 product-box-add-to-cart-button")
+    WebElement addToCartButtonFahrenheit;
+
+    @FindBy(xpath = "//a[@href='/cart']")
+    WebElement shoppingCartLink;
+
+    public void clickOnAddToCartButtonFahrenheit(){
+
+        addToCartButtonFahrenheit.click();
+    }
+
+    public void clickOnShoppingCartLink(){
+
+        shoppingCartLink.click();
+    }
+}
Index: src/test/java/org/example/driver/DriverManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.driver;\r\n\r\nimport cucumber.api.Scenario;\r\nimport io.github.bonigarcia.wdm.WebDriverManager;\r\nimport org.apache.commons.io.FileUtils;\r\nimport org.openqa.selenium.*;\r\nimport org.openqa.selenium.chrome.ChromeDriver;\r\nimport org.openqa.selenium.chrome.ChromeOptions;\r\nimport org.openqa.selenium.edge.EdgeDriver;\r\nimport org.openqa.selenium.edge.EdgeOptions;\r\nimport org.openqa.selenium.firefox.FirefoxDriver;\r\nimport org.openqa.selenium.firefox.FirefoxOptions;\r\nimport org.openqa.selenium.safari.SafariDriver;\r\nimport org.openqa.selenium.support.PageFactory;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.time.Duration;\r\nimport java.util.Random;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class DriverManager {\r\n    public static WebDriver driver;\r\n    String browser = \"chrome\";\r\n    String baseURL = \"https://demo.nopcommerce.com/\";\r\n\r\n    public DriverManager() {\r\n\r\n        PageFactory.initElements(driver, this);\r\n    }\r\n\r\n\r\n    public void runOnLocalBrowser() throws IllegalAccessException {\r\n        switch (browser) {\r\n            case \"chrome\":\r\n                WebDriverManager.chromedriver().setup();\r\n                driver = new ChromeDriver();\r\n                break;\r\n            case \"edge\":\r\n                WebDriverManager.edgedriver().setup();\r\n                driver = new EdgeDriver();\r\n                break;\r\n            case \"safari\":\r\n                driver = new SafariDriver();\r\n                break;\r\n            case \"firefox\":\r\n                WebDriverManager.firefoxdriver().setup();\r\n                driver = new FirefoxDriver();\r\n                break;\r\n            default:\r\n                throw new IllegalAccessException(\"Unexpected browser\");\r\n        }\r\n    }\r\n\r\n    public void runInHeadlessMode() throws IllegalAccessException {\r\n        switch (browser) {\r\n            case \"chrome\":\r\n                WebDriverManager.chromedriver().setup();\r\n                ChromeOptions chromeOptions = new ChromeOptions();\r\n                chromeOptions.setHeadless(true);\r\n                chromeOptions.addArguments(\"--window-size=1920,1080\");\r\n                driver = new ChromeDriver(chromeOptions);\r\n                break;\r\n            case \"edge\":\r\n                WebDriverManager.edgedriver().setup();\r\n                EdgeOptions edgeOptions = new EdgeOptions();\r\n                edgeOptions.setCapability(\"--headless\", true);\r\n                driver = new EdgeDriver(edgeOptions);\r\n                break;\r\n            case \"firefox\":\r\n                WebDriverManager.firefoxdriver().setup();\r\n                FirefoxOptions firefoxOptions = new FirefoxOptions();\r\n                firefoxOptions.setHeadless(true);\r\n                firefoxOptions.addArguments(\"--window-size=1920,1080\");\r\n                driver = new FirefoxDriver(firefoxOptions);\r\n                break;\r\n\r\n            default:\r\n                throw new IllegalAccessException(\"Unexpected browser\");\r\n        }\r\n    }\r\n\r\n    public void maxBrowser() {\r\n        driver.manage().window().maximize();\r\n    }\r\n\r\n    public void applyImplicitWait() {\r\n        //for selenium 4\r\n        //driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(20));\r\n         //  for selenium 3\r\n        driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);\r\n    }\r\n\r\n    public void closeBrowser() {\r\n        driver.quit();\r\n    }\r\n\r\n    public void sleepBrowser(int ms) throws InterruptedException {\r\n        Thread.sleep(ms); //here ms is short form of milliseconds.\r\n    }\r\n\r\n    public void goToURL() {\r\n        driver.get(baseURL);\r\n    }\r\n\r\n    public String getURL() {\r\n        return driver.getCurrentUrl();\r\n    }\r\n\r\n    public String getTitle() {\r\n        return driver.getTitle();\r\n    }\r\n\r\n    public WebElement waitUntilElementIsClickable(WebElement element) {\r\n        WebDriverWait wait = new WebDriverWait(driver, 20);\r\n        return wait.until(ExpectedConditions.elementToBeClickable(element));\r\n    }\r\n\r\n    public void waitForElementVisibility(WebElement element, int timeout, String failureMessage) {\r\n        WebDriverWait wait = new WebDriverWait(driver, timeout);\r\n        wait.withMessage(failureMessage);\r\n        wait.until(ExpectedConditions.visibilityOf(element));\r\n    }\r\n\r\n    public void scrollTo(WebElement element) {\r\n        ((JavascriptExecutor) driver).executeScript(\"arguments[0].scrollIntoView(true);\", element);\r\n    }\r\n\r\n    //take element screenshot comes at selenium 4\r\n    //for visual regression or screenshot comparison for UI layout, look and feel, font size, colour, location\r\n\r\n    public void takeElementScreenshot(WebElement element, String fileName) {\r\n        File scnFile = element.getScreenshotAs(OutputType.FILE);\r\n        try {\r\n            FileUtils.copyFile(scnFile, new File(\"src/test/resources/screenshots/\" + fileName + \".png\"));\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //to take full screenshot when we do functional test,we add that in report/ save in local machine/ debugging/trouble shooting\r\n    //finding issues\r\n    public void takeScreenshot(Scenario scenario) {\r\n        //107 & 108 take screenshot and attach in our scenario output(after execution)\r\n        byte[] screenShot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES);\r\n        scenario.embed(screenShot, \"image/png\");\r\n\r\n        //take a screenshot passing scenario when scenario fails\r\n        File scrFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\r\n\r\n        try {//C:\\Users\\mitta\\OneDrive\\Desktop\\screenshotErrors\r\n            FileUtils.copyFile(scrFile, new File(\"/Users/mitta/OneDrive/Desktop/screenshotErrors\" + generateRandomNumber() + \".jpg\"));\r\n        } catch (IOException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public int generateRandomNumber() {\r\n\r\n        Random random = new Random();\r\n        return random.nextInt(100);\r\n    }\r\n\r\n\r\n    public static String getRandomString(int length) {\r\n        final String characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJLMNOPQRSTUVWXYZ\";\r\n        StringBuilder result = new StringBuilder();\r\n\r\n        while (length > 0) {\r\n            Random rand = new Random();\r\n            result.append(characters.charAt(rand.nextInt(characters.length())));\r\n            length--;\r\n        }\r\n        return result.toString();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/driver/DriverManager.java b/src/test/java/org/example/driver/DriverManager.java
--- a/src/test/java/org/example/driver/DriverManager.java	
+++ b/src/test/java/org/example/driver/DriverManager.java	
@@ -128,7 +128,7 @@
         ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", element);
     }
 
-    //take element screenshot comes at selenium 4
+    //to take screenshot for elements only--> for selenium 4, use below method
     //for visual regression or screenshot comparison for UI layout, look and feel, font size, colour, location
 
     public void takeElementScreenshot(WebElement element, String fileName) {
@@ -140,7 +140,7 @@
         }
     }
 
-    //to take full screenshot when we do functional test,we add that in report/ save in local machine/ debugging/trouble shooting
+    //to take full screenshot when we do functional test,we add that in report/save in local machine/debugging/troubleshooting
     //finding issues
     public void takeScreenshot(Scenario scenario) {
         //107 & 108 take screenshot and attach in our scenario output(after execution)
@@ -161,7 +161,7 @@
     public int generateRandomNumber() {
 
         Random random = new Random();
-        return random.nextInt(100);
+        return random.nextInt(1000);
     }
 
 
